"""
Django settings for BotChat project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-j6hs!9g(qs%74-b41$)%%^)chn0i5hd#36srp$6bwheovh_a!h"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]  # TODO 在测试时使用，允许所有的主机访问;在部署上线前,应该更改为允许访问的主机的IP地址和域名(即我的云服务器的ip地址和我购买的域名)

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    'corsheaders',
    'rest_framework',  # 添加rest_framework
    'user',
    'chat',
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    'corsheaders.middleware.CorsMiddleware',  # 添加corsheaders中间件以处理跨域请求
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    # "user.middleware.UserAuthenticationMiddleware",  # 由于不打算使用JWT来实现用户认证，所以注释掉该中间件
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "BotChat.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],  # 由于不打算使用模板，所以应该可以注释掉: BASE_DIR / 'templates'
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "BotChat.wsgi.application"

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# 以下对于数据库和celery[redis]的配置分使用Docker和不使用Docker两种情况,可根据需求的不同进行选择

# 在使用Docker来管理项目的各个容器时使用以下配置:
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'botchat',
#         'USER': 'root',
#         'PASSWORD': '20030207TLY',
#         'HOST': 'db',  # 这里更改为'db'
#         'PORT': 3306,
#     }
# }

# 不使用Docker来管理项目的各个容器时,请使用以下配置:
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'botchat',
        'USER': 'root',
        'PASSWORD': '20030207TLY',
        'HOST': 'localhost',
        'PORT': 3306,
    }
}

# 使用Docker管理项目容器时采用如下配置方法来配置celery:
# CELERY_BROKER_URL = 'redis://redis:6379/0' # 使用本地的 Redis
# CELERY_RESULT_BACKEND = 'redis://redis:6379/0' # 使用 Redis 存储结果

# 不使用Docker管理项目容器时采用如下配置方法来配置celery:
CELERY_BROKER_URL = 'redis://localhost:6379/0'  # 使用本地的 Redis
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'  # 使用 Redis 存储结果


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "zh-hans"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "/static/"
STATICFILES_DIRS = [  # 静态文件目录,用于指定非static文件夹下的静态文件的位置
    BASE_DIR / 'static',
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# 配置Django日志
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django.request': {  # 只针对请求日志
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}

# DRF配置:
REST_FRAMEWORK = {
    'PAGE_SIZE': 25,
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'DATE_FORMAT': '%Y-%m-%d %H:%M:%S',
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer'  # 为了方便开发和调试，保留了BrowsableAPIRenderer
    ],
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.MultiPartParser',  # 因为要处理音频文件上传
        'rest_framework.parsers.FormParser'  # 可处理表单数据
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',  # 默认权限，意味着只有经过身份验证的用户才可以访问API视图
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.BasicAuthentication',  # 基本的HTTP认证，通常在开发环境中使用
        'rest_framework.authentication.SessionAuthentication',  # Django的session认证，如果您使用Django的登录系统也可以保留
        'rest_framework.authentication.TokenAuthentication',  # Token身份验证
    ],
}

AUDIO_ASSESSMENT_REQUIREMENT_PROMPT = ("1. 上述xml格式的文本是对用户一段英语发音的评分，其中包含了段落、句子、词语三大类的评价参数。"
                                       "2. 请根据上述xml文本提供的评分细节,总结用户的得分情况和最终成绩并使用流畅的简体中文输出结果。"
                                       "3. 评价的第一部分是对用户所阅读段落的整体评价。"
                                       "4. 评价的第二部分是对一些句子、词语较为突出的部分进行评价（对于用户得分较高的部分可以加以赞赏,对于用户得分较低的部分可以指出可能存在的问题）。"
                                       "5. 为了精简评价，不是所有句子和词语都需要进行评价。对于需要评价的，只需要根据分数高低大概地笼统地评价，不需要告知读者分数。"
                                       "6. 需要告知用户的分数保留一位小数即可。"
                                       "7. xml中所有评分参数都是以0分作为最低分,以5分作为最高分。值为负数的参数无意义，请忽略。"
                                       "8. 你的回答需要客观，并带有一定的鼓舞。"
                                       "9. 所有的评分标准不需要向用户解释。"
                                       "10. 回复以第二人称，对用户称呼'您'。")

ORAL_GRAMMAR_ASSESSMENT_REQUIREMENT_PROMPT = ("1. 上述的文本是用户刚刚讲出的一段口语表达."
                                              "2. 由于用户的母语是中文,上述文本中可能出现中文词汇."
                                              "3. 请审阅用户的口语表达,如果发现用户的口语表达中出现了语法错误,请指出错误所在并给出正确的表达方式."
                                              "4. 如果用户的口语表达中没有语法错误,但是有不符合英语口语习惯的表达方式,请指出问题所在并给出改善后的表达方式."
                                              "5. 如果用户的口语表达中出现中文,这表明用户无法将该中文词汇翻译成英文,请将该中文词汇翻译成英文并告知用户."
                                              "6. 你的回答需要客观，并带有一定的鼓舞"
                                              "7. 你的回答需要使用流畅的简体中文,但是为用户纠正语法错误和口语表达以及将用户表达中夹杂的中文词汇翻译为英文时,需要使用流畅的英文."
                                              "8. 回复以第二人称，对用户称呼'您'"


)

# 所有Topic的通用语境, 用于限制chatGPT回答用户问题时的注意事项
GENERAL_TOPIC_REQUIREMENT_CUSTOM_CONTEXT = ("Please Note: "
"1. If user input is not relevant to the topic, please do not answer and turn the topic back to that environment."
"2. When talking to users, you should always be the person they want you to be. You should avoid answers like 'I'm an AI assistant'. At the same time, you should not overemphasize your identity given in the 'system context' in your conversations with users, but should naturally play the role that users expect you to play."
"3. Unless specifically requested by the user, the length of each answer should be limited to 125 words"
"4. You should fully use English reply!!! Even if the user is in another language like Chinese."
)

# 默认的语境(自由度最高)
DEFAULT_TOPIC_CUSTOM_CONTEXT = "AI assistant's role: You are an oral English teacher fluent in both Chinese and English. The following system content is the former conversation between user and you. Please answer the user's questions in a manner that mimics that of an oral English teacher."

PRESET_TOPIC_CUSTOM_CONTEXTS = {
    "Attractions for help": "I have just arrived at a strange tourist spot. The scenic spot is located in the mountains, there are a lot of tall cedar and some wild animals, and is one of the most important moraine lake in the mountains surrounding it. Because the altitude is relatively high, and the weather at this time is fog in the mountains, so the weather is relatively cold. But the site has only just been built, and many of the signs are missing. As a local resident, you are very familiar with this. At this time, you found me at a loss in front of your house and took the initiative to ask.",
    "Teacher helps with English": "You are an English teacher. Class has just ended. You are about to leave the classroom. When I came to your help, but my English is not very good, and tension, you didn't hear you. Now you have to play the role of the teacher.",
    "Apply for resignation": "You are the owner of an Internet company. Now you have to hurry to the office for a meeting. But I'm here to tell you that I'm quitting. You're trying to convince me to stay because I'm a good worker.",
    "Lost Items at Station": "You are a waiter. Work at a lost and found station in a busy city train station, smile and try to be patient. There is a pile of lost items on the waiter's counter, including umbrels, mobile phones, school bags and other items. I was holding a piece of paper, hoping to find something I had lost.",
    "Cajoling your girlfriend": "You're my girlfriend. I'm your boyfriend. Now we're at home, sitting on opposite ends of the couch, and it's tense because I forgot to do the dishes that night. Your head is down, your fingers are drumming on your knees, and you have a look of disapproval on your face. Your tone will be a little angry in the first few sentences, but will gradually ease.",
    "Food Ordering": "You are a waitress at a fast food restaurant called Food Delight. During a busy lunch hour, you greet guests with a smile and a neat uniform. The menu features a selection of burgers, fries and salads. When I entered the restaurant."
}

# 配置CORS:
CORS_ALLOW_ALL_ORIGINS = True
